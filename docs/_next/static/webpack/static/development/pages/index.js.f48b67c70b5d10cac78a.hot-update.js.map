{"version":3,"file":"static/webpack/static/development/pages/index.js.f48b67c70b5d10cac78a.hot-update.js","sources":["webpack:///./pages/posts/svg-draw-arc-with-path.mdx"],"sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport Post from '../../components/Post';\nexport const frontMatter = {\n  slug: '/svg-draw-arc-with-path',\n  title: '如何在 SVG 中使用 path 绘制弧形',\n  subTitle: '由于 path 的灵活性，用 path 来绘制弧形能够更好的控制效果，本文将介绍原生和 \bd3 两种方式来实现它。',\n  tags: ['svg', 'data visualization'],\n  date: '2019/03/12',\n  published: false\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = ({ children }) => <Post data={frontMatter}>{children}</Post>\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`如何在 SVG 中使用 path 绘制弧形`}</h1>\n    <h2>{`原生实现`}</h2>\n    <p>{`该方法来源于 `}<inlineCode parentName=\"p\">{`stack overflow`}</inlineCode>{` 上这个`}<a parentName=\"p\" {...{\n        \"href\": \"https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\"\n      }}>{`提问`}</a>{`。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0; // 将角度转换为弧度\n\n  // 计算在该弧度下半径尾部的坐标点\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n};\n\nconst describeArc = (x, y, radius, startAngle, endAngle) => {\n  const start = polarToCartesian(x, y, radius, endAngle); // 计算起始坐标点\n  const end = polarToCartesian(x, y, radius, startAngle); // 计算结束坐标点\n\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1'; // 判断是否为大角，即延续角度是否大于180度\n\n  const d = \\`M\\${start.x},\\${start.y} A\\${radius},\\${radius},0,\\${largeArcFlag},0,\\${end.x},\\${end.y}\\`;\n\n  return d;\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AADA;AAwBA;AAEA;;;;A","sourceRoot":""}