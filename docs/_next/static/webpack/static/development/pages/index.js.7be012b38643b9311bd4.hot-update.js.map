{"version":3,"file":"static/webpack/static/development/pages/index.js.7be012b38643b9311bd4.hot-update.js","sources":["webpack:///./pages/posts/css-selector-pseudo-element-and-class.mdx"],"sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport Post from '../../components/Post';\nexport const frontMatter = {\n  slug: '/css-selector-pseudo-element-and-class',\n  title: 'CSS 伪元素与伪类',\n  subTitle: '介绍伪元素和伪类区别，并说明如何在日常开发中使用它们。',\n  tags: ['css'],\n  date: '2019/03/12',\n  published: false\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = ({ children }) => <Post data={frontMatter}>{children}</Post>\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`CSS 伪元素与伪类`}</h1>\n    <h2>{`伪元素（Pseudo Element）`}</h2>\n    <p>{`伪元素从名字就能知道，它不是真正的元素，但它的表现形式和真正的网页元素一样，也可以对其 `}<inlineCode parentName=\"p\">{`CSS`}</inlineCode>{` 进行控制。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`按照规范，表示伪元素时应使用两个冒号（::）来代替一个（:）。以此来区分伪元素和伪类。但是，在老版本的 `}<inlineCode parentName=\"p\">{`W3C`}</inlineCode>{` 声明中并不存在这个区分，所以大多数浏览器两种写法都支持。`}</p>\n    </blockquote>\n    <p>{`已被标准化的伪元素，其中带括号的表示两种写法都支持。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`::after（:after）`}</li>\n      <li parentName=\"ul\">{`::first-line（:first-line）`}</li>\n      <li parentName=\"ul\">{`::slotted`}</li>\n      <li parentName=\"ul\">{`::before（:before）`}</li>\n      <li parentName=\"ul\">{`::cue（:cue）`}</li>\n      <li parentName=\"ul\">{`::first-letter（:first-letter）`}</li>\n      <li parentName=\"ul\">{`::selection`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;;;;A","sourceRoot":""}