{"version":3,"file":"static/webpack/static/development/pages/index.js.5cfc8d7deb72e742fed1.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Layout from '../components/Layout';\r\nimport PostCard from '../components/PostCard';\r\nimport Category from '../components/Category';\r\nimport PageButton from '../components/PageButton';\r\nimport posts from '../data/posts';\r\n\r\nconst MainPage = ({ data = [], classes }) => {\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [category, setCategory] = useState('all');\r\n\r\n  // set category list\r\n  useEffect(() => {\r\n    const list = [\r\n      {\r\n        name: 'all',\r\n        num: 5\r\n      },\r\n      {\r\n        name: 'react',\r\n        num: 1\r\n      },\r\n      {\r\n        name: 'node',\r\n        num: 2\r\n      },\r\n      {\r\n        name: 'javascript',\r\n        num: 4\r\n      },\r\n      {\r\n        name: 'd3',\r\n        num: 2\r\n      }\r\n    ];\r\n\r\n    setCategoryList(list);\r\n  }, []);\r\n\r\n  // change category\r\n  // useEffect(() => {\r\n  //   if (category === 'all') {\r\n  //     setPosts([]);\r\n  //   } else {\r\n  //     setPosts([]);\r\n  //   }\r\n  // }, [category]);\r\n\r\n  const changeCategory = category => {\r\n    tween({\r\n      from: window.scrollY,\r\n      to: 0,\r\n      ease: easing.easeOut\r\n    }).start({\r\n      update: v => {\r\n        window.scrollTo(0, v);\r\n      },\r\n      complete: () => {\r\n        setCategory(category);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Grid className={classes.container} container wrap=\"nowrap\">\r\n          <Grid className={classes.left} item>\r\n            <Grid className={classes.posts} item>\r\n              {posts\r\n                .filter(o => o.published)\r\n                .slice(0, 7)\r\n                .map(({ id, thumb, title, tags, date, subTitle, slug }) => (\r\n                  <PostCard key={slug} id={id} data={{ thumb, title, tags, slug, date, subTitle }} changeCategory={changeCategory} />\r\n                ))}\r\n            </Grid>\r\n            <Divider light />\r\n            <PageButton />\r\n          </Grid>\r\n          <Grid className={classes.right} item>\r\n            <Category changeCategory={changeCategory} categoryList={categoryList} />\r\n          </Grid>\r\n        </Grid>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    justifyContent: 'center'\r\n  },\r\n  left: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '75%'\r\n    },\r\n    padding: '0px 32px'\r\n  },\r\n  posts: {\r\n    minHeight: 400\r\n  },\r\n  right: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block',\r\n      width: '25%'\r\n    },\r\n    padding: '24px 24px'\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MainPage);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AAEA;AADA;AAKA;AACA;AADA;AAGA;AAEA;AADA;AAIA;AACA;AAFA;AAjBA;AAAA;AACA;AAwBA;;;;A","sourceRoot":""}