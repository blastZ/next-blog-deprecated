(window.webpackJsonp=window.webpackJsonp||[]).push([["af20"],{"0OL6":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/three-ways-to-remove-array-duplicates",function(){var e=t("0SE6");return{page:e.default||e}}])},"0SE6":function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return b}),t.d(n,"default",function(){return s});var r=t("kOwS"),a=t("qNsG"),c=(t("q1tI"),t("E/Ix")),l=t("6fZt"),b={slug:"/three-ways-to-remove-array-duplicates",title:"数组去重的三种方式",subTitle:"这是三种过滤数组中的重复元素，并返回只包含唯一变量的方法，我个人偏向于使用 filter，它在性能方面更占优势。",tags:["javascript"],date:"2019/03/12",published:!0},p={frontMatter:b},u=function(e){var n=e.children;return Object(c.b)(l.a,{data:b},n)};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)(u,Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",null,"数组去重的三种方式"),Object(c.b)("p",null,"这是数组去重的三种方式，我个人偏向于使用 ",Object(c.b)("inlineCode",{parentName:"p"},"filter")," 的方式，它在性能方面更占优。"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const array = ['sheep', 1, 2, 'sheep', 'sheep', 3];\n\n// 1.Set\n[...new Set(array)];\n\n// 2.filter\narray.filter((o, index) => array.indexOf(o) === index);\n\n// 3.reduce\narray.reduce((result, current) => {\n  return result.indexOf(current) < 0 ? result.concat([current]) : result;\n}, []);\n\n// ['sheep', 1, 2, 3]\n")),Object(c.b)("h2",null,"1.使用 Set"),Object(c.b)("p",null,"先解释一下什么是 Set"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Set 是 ES6 新增的一种数据对象，只允许保存唯一变量，当你将它传入一个数组时，它会移除所有重复的变量。")),Object(c.b)("p",null,"使用 Set 去除重复变量分为两步"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"首先创建一个 Set ，并传入一个数组，由于 Set 只允许唯一变量，所有的重复项都会被移除。"),Object(c.b)("li",{parentName:"ol"},"现在所有重复性都被移除了，接着使用展开运算符 ",Object(c.b)("inlineCode",{parentName:"li"},"...")," 将 Set 转换会数组。")),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const array = ['sheep', 1, 2, 'sheep', 'sheep', 3];\n\n// 第一步\nconst uniqueSet = new Set(array);\n// Set { 'sheep', 1, 2, 3 }\n\n// 第二步\nconst backToArray = [...uniqueSet];\n// ['sheep', 1, 2, 3]\n")),Object(c.b)("h2",null,"2.使用 filter"),Object(c.b)("p",null,"为了理解这种方式，先要了解这两个方法 ",Object(c.b)("inlineCode",{parentName:"p"},"indexOf")," 和 ",Object(c.b)("inlineCode",{parentName:"p"},"filter"),"。"),Object(c.b)("h3",null,"indexOf"),Object(c.b)("p",null,"indexOf 方法会根据所提供的元素返回数组中第一个被找到相同元素的下标"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const array = ['sheep', 1, 2, 'sheep', 'sheep', 3];\n\narray.indexOf('sheep'); // 0\narray.indexOf(1); // 1\narray.indexOf(2); // 2\narray.indexOf(3); // 5\n")),Object(c.b)("h3",null,"filter"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"filter")," 方法会根据我们给定的条件返回一个新的数组。换句话说就是，如果元素通过\n条件返回 ",Object(c.b)("inlineCode",{parentName:"p"},"true"),"，它就会被包含在过滤后的数组中，返回 ",Object(c.b)("inlineCode",{parentName:"p"},"false")," 就不会包含在新的\n数组中。"),Object(c.b)("h3",null,"过滤重复项"),Object(c.b)("p",null,"我们可以通过 ",Object(c.b)("inlineCode",{parentName:"p"},"filter")," 方法检索重复项并剔除它们，只需要将过滤条件设置为："),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const array = ['sheep', 1, 2, 'sheep', 'sheep', 3];\n\narray.filter((o, index) => array.indexOf(o) === index);\n// ['sheep', 1, 2, 3]\n")),Object(c.b)("h2",null,"3.使用 reduce"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"reduce")," 方法会根据传入的 ",Object(c.b)("inlineCode",{parentName:"p"},"reducer")," 函数重组数组内的元素。"),Object(c.b)("p",null,"为了达到我们的目标，我们的 ",Object(c.b)("inlineCode",{parentName:"p"},"reducer")," 函数需要检查最终的数组中是否已经包含了当前元素，如果没有就加入，\n否则跳过当前元素。"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const array = ['sheep', 1, 2, 'sheep', 'sheep', 3];\n\narray.reduce((result, current) => {\n  return result.indexOf(current) < 0 ? result.concat([current]) : result;\n}, []);\n// ['sheep', 1, 2, 3]\n")))}s.isMDXComponent=!0}},[["0OL6","5d41","9da1"]]]);